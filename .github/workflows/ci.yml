name: CI/CD Pipeline 🚀

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'
    types: [opened, synchronize, reopened]
  workflow_dispatch:

jobs:
  check-pr-name:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout code 🛠️
        uses: actions/checkout@v2
      - name: Check PR name format 📝
        run: |
          PR_TITLE=$(jq -r '.pull_request.title' "$GITHUB_EVENT_PATH")
          if [[ ! "$PR_TITLE" =~ ^(feat|fix|bug)/ ]]; then
            echo "PR title does not follow the required format! ❌"
            exit 1
          else
            echo "PR title format is correct! ✅"
          fi

  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code 🛠️
        uses: actions/checkout@v2
      - name: Set up JDK 11 ☕
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '11'
      - name: Build with Maven 🚀
        run: mvn clean install
      - name: Run tests 🧪
        run: mvn test

  sonarcloud-analysis:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: 21
          distribution: 'zulu' # Alternative distribution options are available.
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=goby33_ChooseMyWeekMealBack

  update-changelog:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
      - name: Checkout code 🛠️
        uses: actions/checkout@v2
      - name: Update Changelog 📜
        run: |
          echo "Updating changelog..."
          # Command to update changelog, e.g., using a CLI tool
          # For example:
          # npm install -g conventional-changelog-cli
          # conventional-changelog -p angular -i CHANGELOG.md -s

  deploy-to-prod:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code 🛠️
        uses: actions/checkout@v2
      - name: Set up JDK 11 ☕
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '11'
      - name: Build with Maven 🚀
        run: mvn clean install
      - name: Deploy to Production 🌐
        run: |
          echo "Deploying to production..."
          # Commands to deploy the application to production
          # For example:
          # scp -r ./target/*.jar user@server:/path/to/deploy/
          # ssh user@server 'systemctl restart your-app-service'
